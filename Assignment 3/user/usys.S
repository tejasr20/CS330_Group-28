# generated by usys.pl - do not edit
#include "kernel/syscall.h"
.global fork
fork:
 li a7, SYS_fork
 ecall
 ret
.global exit
exit:
 li a7, SYS_exit
 ecall
 ret
.global wait
wait:
 li a7, SYS_wait
 ecall
 ret
.global pipe
pipe:
 li a7, SYS_pipe
 ecall
 ret
.global read
read:
 li a7, SYS_read
 ecall
 ret
.global write
write:
 li a7, SYS_write
 ecall
 ret
.global close
close:
 li a7, SYS_close
 ecall
 ret
.global kill
kill:
 li a7, SYS_kill
 ecall
 ret
.global exec
exec:
 li a7, SYS_exec
 ecall
 ret
.global open
open:
 li a7, SYS_open
 ecall
 ret
.global mknod
mknod:
 li a7, SYS_mknod
 ecall
 ret
.global unlink
unlink:
 li a7, SYS_unlink
 ecall
 ret
.global fstat
fstat:
 li a7, SYS_fstat
 ecall
 ret
.global link
link:
 li a7, SYS_link
 ecall
 ret
.global mkdir
mkdir:
 li a7, SYS_mkdir
 ecall
 ret
.global chdir
chdir:
 li a7, SYS_chdir
 ecall
 ret
.global dup
dup:
 li a7, SYS_dup
 ecall
 ret
.global getpid
getpid:
 li a7, SYS_getpid
 ecall
 ret
.global sbrk
sbrk:
 li a7, SYS_sbrk
 ecall
 ret
.global sleep
sleep:
 li a7, SYS_sleep
 ecall
 ret
.global uptime
uptime:
 li a7, SYS_uptime
 ecall
 ret
.global getppid
getppid:
 li a7, SYS_getppid
 ecall
 ret
.global yield
yield:
 li a7, SYS_yield
 ecall
 ret
.global getpa
getpa:
 li a7, SYS_getpa
 ecall
 ret
.global forkf
forkf:
 li a7, SYS_forkf
 ecall
 ret
.global waitpid
waitpid:
 li a7, SYS_waitpid
 ecall
 ret
.global ps
ps:
 li a7, SYS_ps
 ecall
 ret
.global pinfo
pinfo:
 li a7, SYS_pinfo
 ecall
 ret
.global forkp
forkp:
 li a7, SYS_forkp
 ecall
 ret
.global schedpolicy
schedpolicy:
 li a7, SYS_schedpolicy
 ecall
 ret
.global condsleep
condsleep:
 li a7, SYS_condsleep
 ecall
 ret
.global barrier_alloc
barrier_alloc:
 li a7, SYS_barrier_alloc
 ecall
 ret
.global barrier
barrier:
 li a7, SYS_barrier
 ecall
 ret
.global barrier_free
barrier_free:
 li a7, SYS_barrier_free
 ecall
 ret
.global buffer_cond_init
buffer_cond_init:
 li a7, SYS_buffer_cond_init
 ecall
 ret
.global cond_consume
cond_consume:
 li a7, SYS_cond_consume
 ecall
 ret
.global cond_produce
cond_produce:
 li a7, SYS_cond_produce
 ecall
 ret
.global buffer_sem_init
buffer_sem_init:
 li a7, SYS_buffer_sem_init
 ecall
 ret
.global sem_consume
sem_consume:
 li a7, SYS_sem_consume
 ecall
 ret
.global sem_produce
sem_produce:
 li a7, SYS_sem_produce
 ecall
 ret
